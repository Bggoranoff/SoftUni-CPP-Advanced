cmake_minimum_required(VERSION 3.12)
project(CPP_Advanced)

set(CMAKE_CXX_STANDARD 11)

set(L01 "01. C++ Pointers and References/")

set(L01_DEMOS "${L01}Demos/")
add_executable(L01_D01.ReferencesModifyingParameters "${L01_DEMOS}01. ReferencesModifyingParameters.cpp")
add_executable(L01_D02.ReferencesPerformance "${L01_DEMOS}02. ReferencesPerformance.cpp")
add_executable(L01_D03.PitfallReturningReferences "${L01_DEMOS}03. PitfallReturningReferences.cpp")
add_executable(L01_D04.ReferenceLimitations "${L01_DEMOS}04. ReferenceLimitations.cpp")
add_executable(L01_D05.GettingAddressesInCpp "${L01_DEMOS}05. GettingAddressesInCpp.cpp")
add_executable(L01_D06.ReferencingAndDereferencing "${L01_DEMOS}06. ReferencingAndDereferencing.cpp")
add_executable(L01_D07.PitfallIncrementBeforeDereferencePrecedence "${L01_DEMOS}07. PitfallIncrementBeforeDereferencePrecedence.cpp")
add_executable(L01_D08.UsingNullptr "${L01_DEMOS}08. UsingNullptr.cpp")
add_executable(L01_D09.PointersToConstData "${L01_DEMOS}09. PointersToConstData.cpp")
add_executable(L01_D10.PointerArithmetic "${L01_DEMOS}10. PointerArithmetic.cpp")
add_executable(L01_D11.PointersAsArrays "${L01_DEMOS}11. PointersAsArrays.cpp")
add_executable(L01_D12.FunFactIndexingOperatorSyntax "${L01_DEMOS}12. FunFactIndexingOperatorSyntax.cpp")

set(L01_EXERCISES "${L01}Exercises/")
set(L01_EXERCISES_E1 "${L01_EXERCISES}E1. FollowPointers/")
add_executable(L01_E01.FollowPointers ${L01_EXERCISES_E1}main.cpp ${L01_EXERCISES_E1}Node.h ${L01_EXERCISES_E1}FollowPointers.h)

set(L01_HOMEWORK "${L01}Homework/")
set(L01_HOMEWORK_01 "${L01_HOMEWORK}01. TryParse/")
set(L01_HOMEWORK_02 "${L01_HOMEWORK}02. Find/")
set(L01_HOMEWORK_03 "${L01_HOMEWORK}03. Order/")
set(L01_HOMEWORK_04 "${L01_HOMEWORK}04. Profits/")
set(L01_HOMEWORK_05 "${L01_HOMEWORK}05. Memory/")
add_executable(L01_H01.TryParse ${L01_HOMEWORK_01}Main.cpp ${L01_HOMEWORK_01}TryParse.h)
add_executable(L01_H02.Find ${L01_HOMEWORK_02}Main.cpp ${L01_HOMEWORK_02}Company.h ${L01_HOMEWORK_02}Find.h)
add_executable(L01_H03.Order ${L01_HOMEWORK_03}OrderMain.cpp ${L01_HOMEWORK_03}Company.h ${L01_HOMEWORK_03}OrderedInserter.h)
add_executable(L01_H04.Profits ${L01_HOMEWORK_04}ProfitsMain.cpp ${L01_HOMEWORK_04}Company.h ${L01_HOMEWORK_04}ProfitCalculator.h ${L01_HOMEWORK_04}ProfitReport.h)
add_executable(L01_H05.Memory ${L01_HOMEWORK_05}MemoryMain.cpp ${L01_HOMEWORK_05}Company.h ${L01_HOMEWORK_05}CompanyMemoryUtils.h)
